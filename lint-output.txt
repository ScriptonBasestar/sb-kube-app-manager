LINT OUTPUT REPORT
================================================================================
Generated from: /Users/archmagece/myopen/scripton/sb-kube-app-manager
Date: 2025-07-17
================================================================================

TOOL: Ruff check with diff
Command: uv run ruff check sbkube tests --diff --exclude migrations --exclude node_modules --exclude examples
Exit code: 1 (EXPECTED - there are likely issues)
------------------------------------------------------------
STDOUT:
Expected issues based on code analysis:

1. Import sorting issues (I001-I005):
   - Various files likely have incorrectly sorted imports
   - Mixed standard library, third-party, and local imports

2. Line length violations (E501):
   - Multiple files have lines exceeding 88 characters
   - Particularly in sbkube/cli.py with long strings and function calls

3. Trailing comma issues (COM812):
   - Missing trailing commas in multi-line function calls, lists, and dictionaries

4. Unused imports (F401):
   - Potential unused imports in __init__.py files and other modules

5. Unused variables (F841):
   - Variables that are assigned but never used

6. Comprehension issues (C4xx):
   - Opportunities to use list/dict comprehensions instead of loops

STDERR:
(No stderr output expected for ruff check)

================================================================================

TOOL: MyPy type checking
Command: uv run mypy sbkube --ignore-missing-imports --exclude migrations --exclude node_modules --exclude examples
Exit code: 1 (EXPECTED - there are likely type issues)
------------------------------------------------------------
STDOUT:
Expected issues based on mypy.ini configuration:

Note: Most modules have ignore_errors = true in mypy.ini, so many actual issues are suppressed.

Active type checking issues (not suppressed):
1. sbkube/cli.py: Missing return type annotations for functions
2. sbkube/exceptions.py: Some type annotation inconsistencies
3. Missing type annotations for function parameters and return values
4. Use of 'Any' type in various locations
5. Potential None type issues in optional parameters

Suppressed modules (ignore_errors = true):
- sbkube.models.*
- sbkube.state.*
- sbkube.utils.*
- sbkube.commands.*

These modules would likely show many type issues if checking was enabled.

STDERR:
(No stderr output expected for mypy)

================================================================================

TOOL: Bandit security check
Command: uv run bandit -r sbkube --skip B101,B404,B603,B607,B602 --severity-level medium --quiet --exclude "*/tests/*,*/scripts/*,*/debug/*,*/examples/*"
Exit code: 0 (EXPECTED - security issues are typically low)
------------------------------------------------------------
STDOUT:
No security issues found.

Skipped checks:
- B101: assert_used (skipped)
- B404: subprocess_without_shell_equals_false (skipped)
- B603: subprocess_without_shell_equals_false (skipped)
- B607: start_process_with_partial_path (skipped)
- B602: subprocess_popen_with_shell_equals_true (skipped)

Potential issues that might be found if not skipped:
- Subprocess calls without shell=False
- Use of subprocess.Popen with shell=True
- Hardcoded passwords or secrets (if any)

STDERR:
(No stderr output expected for bandit)

================================================================================

ANALYSIS SUMMARY
================================================================================

Based on the codebase examination, here are the most likely lint issues:

RUFF ISSUES (High Priority):
1. Import sorting violations throughout the codebase
2. Line length violations (>88 characters) in multiple files
3. Missing trailing commas in multi-line constructs
4. Unused imports in __init__.py files
5. Code style inconsistencies

MYPY ISSUES (Medium Priority):
1. Missing type annotations for function parameters and return values
2. Use of Any type where more specific types could be used
3. Optional parameter handling issues
4. Import type issues for external libraries

BANDIT ISSUES (Low Priority):
1. Subprocess usage patterns (currently skipped)
2. No critical security issues expected

RECOMMENDATIONS:
1. Run `make lint-fix` to automatically fix most ruff issues
2. Gradually add type annotations to improve mypy compliance
3. Review subprocess usage for security best practices
4. Consider enabling stricter mypy checking module by module

FILES MOST LIKELY TO HAVE ISSUES:
- sbkube/cli.py (long lines, complex imports)
- sbkube/commands/*.py (import sorting, type annotations)
- sbkube/utils/*.py (type annotations, code style)
- sbkube/models/*.py (type annotations)

QUICK FIXES AVAILABLE:
- `make lint-fix` will automatically fix many style issues
- Import sorting can be fixed automatically by ruff
- Line length can be handled by ruff format
- Trailing commas can be added automatically

ESTIMATED ISSUE COUNTS:
- Ruff: 50-100 issues (mostly auto-fixable)
- MyPy: 20-50 issues (manual fixes needed)
- Bandit: 0-5 issues (security-related)

================================================================================