name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.11", "3.12"]
        test-category: ["unit", "e2e"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[test]"

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Run tests based on matrix
      run: |
        source .venv/bin/activate
        case "${{ matrix.test-category }}" in
          "unit")
            pytest -v tests/unit/ tests/test_imports.py --cov=sbkube --cov-report=xml --cov-report=html || exit 1
            ;;
          "e2e")
            pytest -v tests/e2e/ -m e2e --cov=sbkube --cov-report=xml --cov-report=html || exit 1
            ;;
        esac

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}-${{ matrix.test-category }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}-${{ matrix.test-category }}
        path: |
          htmlcov/
          coverage.xml
          .coverage
        if-no-files-found: warn

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv venv
        uv pip install ruff mypy types-PyYAML types-toml

    - name: Run ruff
      run: |
        source .venv/bin/activate
        ruff check sbkube tests

    - name: Run mypy
      run: |
        source .venv/bin/activate
        mypy sbkube --ignore-missing-imports
