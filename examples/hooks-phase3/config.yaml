# Hooks Phase 3 예제: Validation, Dependency, Rollback
#
# Phase 3 기능 시연:
# - cert-manager를 Helm으로 배포
# - ClusterIssuers 배포 (manifests task with validation)
# - Certificate 생성 (inline task with dependency)
# - DNS 검증 (command task with dependency + wait_for)
# - 실패 시 자동 rollback
#
# 실행 방법:
#   sbkube apply --app-dir examples/hooks-phase3 --namespace cert-manager

namespace: cert-manager

apps:
  cert-manager:
    type: helm
    chart: jetstack/cert-manager
    version: v1.13.2
    values:
      - installCRDs: true
        global:
          leaderElection:
            namespace: cert-manager
    hooks:
      # Phase 3: Validation + Dependency + Rollback
      post_deploy_tasks:
        # Step 1: ClusterIssuer 배포 (manifests)
        - type: manifests
          name: deploy-cluster-issuers
          files:
            - manifests/issuers/cluster-issuer-letsencrypt-prd.yaml
            - manifests/issuers/cluster-issuer-letsencrypt-stg.yaml
          validation:
            # ClusterIssuer가 Ready 상태가 될 때까지 대기
            kind: ClusterIssuer
            wait_for_ready: true
            timeout: 120
            conditions:
              - type: Ready
                status: "True"
          rollback:
            # ClusterIssuer 배포 실패 시 자동 정리
            enabled: true
            on_failure: always
            commands:
              - kubectl delete clusterissuer letsencrypt-prd --ignore-not-found=true
              - kubectl delete clusterissuer letsencrypt-stg --ignore-not-found=true

        # Step 2: Certificate 생성 (inline)
        - type: inline
          name: create-wildcard-certificate
          content:
            apiVersion: cert-manager.io/v1
            kind: Certificate
            metadata:
              name: wildcard-cert
              namespace: default
            spec:
              secretName: wildcard-cert-tls
              issuerRef:
                name: letsencrypt-stg  # staging 환경 사용
                kind: ClusterIssuer
              dnsNames:
                - "*.example.com"
                - "example.com"
          dependency:
            # ClusterIssuer가 먼저 배포되어야 함
            depends_on:
              - deploy-cluster-issuers
          validation:
            # Certificate가 Ready 상태가 될 때까지 대기
            kind: Certificate
            name: wildcard-cert
            namespace: default
            wait_for_ready: true
            timeout: 300
          rollback:
            # Certificate 생성 실패 시 자동 정리
            enabled: true
            on_failure: always
            commands:
              - kubectl delete certificate wildcard-cert -n default --ignore-not-found=true
              - kubectl delete secret wildcard-cert-tls -n default --ignore-not-found=true

        # Step 3: DNS 검증 (command)
        - type: command
          name: verify-dns-records
          command: |
            # DNS TXT 레코드 확인 (ACME challenge)
            dig +short _acme-challenge.example.com TXT @8.8.8.8 | grep -q "." && echo "DNS record found" || exit 1
          retry:
            max_attempts: 5
            delay: 10
          on_failure: warn  # DNS 검증 실패 시 경고만 (배포는 계속)
          dependency:
            # Certificate가 먼저 생성되어야 함
            depends_on:
              - create-wildcard-certificate
            # CertificateRequest가 Ready 상태가 될 때까지 대기
            wait_for:
              - kind: CertificateRequest
                namespace: default
                label_selector: "acme.cert-manager.io/order-name"
                condition: Ready
                timeout: 300
